openapi: 3.1.0
info:
  title: Library Management API
  version: 1.0.0
  description: Managing Group and Student.
paths:
  /groups:
    get:
      summary: A list of group
      parameters:
        - name: groupName
          in: query
          description: Filter by group name
          schema:
            type: string
        - name: releaseDate
          in: query
          description: Filter by release date range
          schema:
            type: string
      responses:
        '200':
          description: A list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/group'
    post:
      summary: Add a new group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '201':
          description: Group created
    put:
      summary: Update an existing group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/group'
      responses:
        '200':
          description: Group updated
    delete:
      summary: Delete a group
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: group deleted

  /students:
    get:
      summary: List of student
      parameters:
        - name: studentName
          in: query
          description: Filter by student name
          schema:
            type: string
      responses:
        '200':
          description: A list of student
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/student'
    post:
      summary: Add a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '201':
          description: Student created
    put:
      summary: Update an existing student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/student'
      responses:
        '200':
          description: Student updated
    delete:
      summary: Delete an student
      parameters:
        - name: authorId
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Student deleted

components:
  schemas:
    group:
      type: object
      properties:
        id:
          type: string
        groupName:
          type: string
        groupYear:
          type: string
          format: date
        promotion:
          type: string
          enum:
            - G
            - H
            - J
            - k
        studentNb:
          type: integer
        student*:
          type: string
    student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
        birthdate:
        type: string
        format: date
        ref:
          type: string
        group:
          type: string

